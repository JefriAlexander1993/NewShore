{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { Validators } from '@angular/forms';\nlet FormComponent = class FormComponent {\n  constructor(restApi, formBuilder) {\n    this.restApi = restApi;\n    this.formBuilder = formBuilder;\n    this.Journey = [];\n    this.origin = new FormControl('');\n    this.destination = new FormControl('');\n  }\n  ngOnInit() {\n    this.myForm = this.formBuilder.group({\n      origin: ['', Validators.required],\n      destination: ['', [Validators.required, Validators.minLength(2)]]\n    }, {\n      validator: this.validateFields\n    });\n  }\n  validateFields(group) {\n    const flightNumber = group.get('flightNumber').value;\n    const passengerName = group.get('passengerName').value;\n    if (flightNumber && passengerName && flightNumber === passengerName) {\n      return {\n        sameValue: true\n      };\n    }\n    return null;\n  }\n  searchJourney() {\n    if (this.origin.value !== \"\" || this.destination.value !== \"\") {\n      this.restApi.searchJourney().subscribe(data => {\n        this.Journey = data.filter(journey => {\n          return journey.departureStation === this.origin.value || journey.arrivalStation === this.destination.value;\n        });\n        if (this.Journey.length > 0) {\n          alert('La busqueda ha traido resultado');\n        } else {\n          alert('No han entrado vuelos que concidan con la información agregada');\n        }\n      });\n    } else {\n      alert('Se require que se dirigencie los dos campos');\n    }\n  }\n};\nFormComponent = __decorate([Component({\n  selector: 'app-form',\n  templateUrl: './form.component.html',\n  styleUrls: ['./form.component.css']\n})], FormComponent);\nexport { FormComponent };","map":{"version":3,"mappings":";AAAA,SAASA,SAAS,QAAgB,eAAe;AACjD,SAASC,WAAW,QAAQ,gBAAgB;AAE5C,SAAiCC,UAAU,QAAQ,gBAAgB;AAQ5D,IAAMC,aAAa,GAAnB,MAAMA,aAAa;EAKxBC,YAAmBC,OAAuB,EAASC,WAAwB;IAAxD,YAAO,GAAPD,OAAO;IAAyB,gBAAW,GAAXC,WAAW;IAH9D,YAAO,GAAQ,EAAE;IACjB,WAAM,GAAG,IAAIL,WAAW,CAAC,EAAE,CAAC;IAC5B,gBAAW,GAAG,IAAIA,WAAW,CAAC,EAAE,CAAC;EAC8C;EAE/EM,QAAQ;IACN,IAAI,CAACC,MAAM,GAAG,IAAI,CAACF,WAAW,CAACG,KAAK,CAAC;MACnCC,MAAM,EAAE,CAAC,EAAE,EAAER,UAAU,CAACS,QAAQ,CAAC;MACjCC,WAAW,EAAE,CAAC,EAAE,EAAE,CAACV,UAAU,CAACS,QAAQ,EAAET,UAAU,CAACW,SAAS,CAAC,CAAC,CAAC,CAAC;KACjE,EAAE;MAAEC,SAAS,EAAE,IAAI,CAACC;IAAc,CAAE,CAAC;EACxC;EAEAA,cAAc,CAACN,KAAgB;IAC7B,MAAMO,YAAY,GAAGP,KAAK,CAACQ,GAAG,CAAC,cAAc,CAAC,CAACC,KAAK;IACpD,MAAMC,aAAa,GAAGV,KAAK,CAACQ,GAAG,CAAC,eAAe,CAAC,CAACC,KAAK;IACtD,IAAIF,YAAY,IAAIG,aAAa,IAAIH,YAAY,KAAKG,aAAa,EAAE;MACnE,OAAO;QAAEC,SAAS,EAAE;MAAI,CAAE;;IAE5B,OAAO,IAAI;EACb;EACAC,aAAa;IACX,IAAI,IAAI,CAACX,MAAM,CAACQ,KAAK,KAAK,EAAE,IAAI,IAAI,CAACN,WAAW,CAACM,KAAK,KAAK,EAAE,EAAE;MAC7D,IAAI,CAACb,OAAO,CAACgB,aAAa,EAAE,CAACC,SAAS,CAAEC,IAAS,IAAI;QACnD,IAAI,CAACC,OAAO,GAAGD,IAAI,CAACE,MAAM,CAAEC,OAAY,IAAI;UAC1C,OAAOA,OAAO,CAACC,gBAAgB,KAAK,IAAI,CAACjB,MAAM,CAACQ,KAAK,IAAIQ,OAAO,CAACE,cAAc,KAAK,IAAI,CAAChB,WAAW,CAACM,KAAK;QAC5G,CAAC,CAAC;QACF,IAAI,IAAI,CAACM,OAAO,CAACK,MAAM,GAAG,CAAC,EAAE;UAC3BC,KAAK,CAAC,iCAAiC,CAAC;SACzC,MAAM;UACLA,KAAK,CAAC,gEAAgE,CAAC;;MAE3E,CAAC,CAAC;KACH,MAAM;MACLA,KAAK,CAAC,6CAA6C,CAAC;;EAExD;CACD;AAtCY3B,aAAa,eALzBH,SAAS,CAAC;EACT+B,QAAQ,EAAE,UAAU;EACpBC,WAAW,EAAE,uBAAuB;EACpCC,SAAS,EAAE,CAAC,sBAAsB;CACnC,CAAC,GACW9B,aAAa,CAsCzB;SAtCYA,aAAa","names":["Component","FormControl","Validators","FormComponent","constructor","restApi","formBuilder","ngOnInit","myForm","group","origin","required","destination","minLength","validator","validateFields","flightNumber","get","value","passengerName","sameValue","searchJourney","subscribe","data","Journey","filter","journey","departureStation","arrivalStation","length","alert","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["/media/jefrialexander/DATOS10/PRUEBAS/PruebaNewShore-main/JourneyForm/src/app/form/form.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { RestApiService } from '../services/rest-api.service';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\n\n\n@Component({\n  selector: 'app-form',\n  templateUrl: './form.component.html',\n  styleUrls: ['./form.component.css']\n})\nexport class FormComponent implements OnInit{\n  myForm!: FormGroup;\n  Journey: any = [];\n  origin = new FormControl('');\n  destination = new FormControl('');\n  constructor(public restApi: RestApiService,private formBuilder: FormBuilder) { }\n\n  ngOnInit() {\n    this.myForm = this.formBuilder.group({\n      origin: ['', Validators.required],\n      destination: ['', [Validators.required, Validators.minLength(2)]]\n    }, { validator: this.validateFields });\n  }\n\n  validateFields(group: FormGroup) {\n    const flightNumber = group.get('flightNumber').value;\n    const passengerName = group.get('passengerName').value;\n    if (flightNumber && passengerName && flightNumber === passengerName) {\n      return { sameValue: true };\n    }\n    return null;\n  }\n  searchJourney() {\n    if (this.origin.value !== \"\" || this.destination.value !== \"\") {\n      this.restApi.searchJourney().subscribe((data: any) => {\n        this.Journey = data.filter((journey: any) => {\n          return journey.departureStation === this.origin.value || journey.arrivalStation === this.destination.value;\n        });\n        if (this.Journey.length > 0) {\n          alert('La busqueda ha traido resultado');\n        } else {\n          alert('No han entrado vuelos que concidan con la información agregada');\n        }\n      });\n    } else {\n      alert('Se require que se dirigencie los dos campos');\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}