{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport { throwError } from 'rxjs';\nimport { retry, catchError } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"ngx-toastr\";\nexport class RestApiService {\n  constructor(http, toastr) {\n    this.http = http;\n    this.toastr = toastr;\n    // Define API\n    this.apiURL = \"https://recruiting-api.newshore.es/api/flights/2\";\n    this.httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json'\n      })\n    };\n  }\n  searchJourney() {\n    return this.http.get(this.apiURL).pipe(retry(1), catchError(this.handleError));\n  }\n  // Error handling\n  handleError(error) {\n    let errorMessage = '';\n    if (error.error instanceof ErrorEvent) {\n      // Get client-side error\n      errorMessage = error.error.message;\n    } else {\n      // Get server-side error\n      errorMessage = `Error Code: ${error.status}\\nMessage: ${error.message}`;\n    }\n    this.toastr.success(errorMessage);\n    return throwError(() => {\n      return errorMessage;\n    });\n  }\n}\nRestApiService.ɵfac = function RestApiService_Factory(t) {\n  return new (t || RestApiService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.ToastrService));\n};\nRestApiService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: RestApiService,\n  factory: RestApiService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AACA,SAAqBA,WAAW,QAAQ,sBAAsB;AAC9D,SAAqBC,UAAU,QAAQ,MAAM;AAC7C,SAASC,KAAK,EAAEC,UAAU,QAAQ,gBAAgB;;;;AAOlD,OAAM,MAAOC,cAAc;EAGzBC,YAAoBC,IAAgB,EAAUC,MAAqB;IAA/C,SAAI,GAAJD,IAAI;IAAsB,WAAM,GAANC,MAAM;IAFpD;IACA,WAAM,GAAG,kDAAkD;IAI3D,gBAAW,GAAG;MACZC,OAAO,EAAE,IAAIR,WAAW,CAAC;QACvB,cAAc,EAAE;OACjB;KACF;EAPqE;EAStES,aAAa;IACX,OAAO,IAAI,CAACH,IAAI,CACbI,GAAG,CAAW,IAAI,CAACC,MAAM,CAAC,CAC1BC,IAAI,CAACV,KAAK,CAAC,CAAC,CAAC,EAAEC,UAAU,CAAC,IAAI,CAACU,WAAW,CAAC,CAAC;EACjD;EAEA;EACAA,WAAW,CAACC,KAAU;IACpB,IAAIC,YAAY,GAAG,EAAE;IACrB,IAAID,KAAK,CAACA,KAAK,YAAYE,UAAU,EAAE;MACrC;MACAD,YAAY,GAAGD,KAAK,CAACA,KAAK,CAACG,OAAO;KACnC,MAAM;MACL;MACAF,YAAY,GAAG,eAAeD,KAAK,CAACI,MAAM,cAAcJ,KAAK,CAACG,OAAO,EAAE;;IAEzE,IAAI,CAACV,MAAM,CAACY,OAAO,CAACJ,YAAY,CAAC;IACjC,OAAOd,UAAU,CAAC,MAAK;MACrB,OAAOc,YAAY;IACrB,CAAC,CAAC;EACJ;;AAhCWX,cAAc;mBAAdA,cAAc;AAAA;AAAdA,cAAc;SAAdA,cAAc;EAAAgB,SAAdhB,cAAc;EAAAiB,YAFb;AAAM","names":["HttpHeaders","throwError","retry","catchError","RestApiService","constructor","http","toastr","headers","searchJourney","get","apiURL","pipe","handleError","error","errorMessage","ErrorEvent","message","status","success","factory","providedIn"],"sourceRoot":"","sources":["/media/jefrialexander/DATOS10/PRUEBAS/PruebaNewShore-main/JourneyForm/src/app/services/rest-api.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { retry, catchError } from 'rxjs/operators';\nimport { IJourney } from '../interfaces/Journey';\nimport { ToastrService } from 'ngx-toastr';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RestApiService {\n  // Define API\n  apiURL = \"https://recruiting-api.newshore.es/api/flights/2\";\n  constructor(private http: HttpClient, private toastr: ToastrService) {}\n\n\n  httpOptions = {\n    headers: new HttpHeaders({\n      'Content-Type': 'application/json',\n    }),\n  };\n\n  searchJourney(): Observable<IJourney> {\n    return this.http\n      .get<IJourney>(this.apiURL)\n      .pipe(retry(1), catchError(this.handleError));\n  }\n\n  // Error handling\n  handleError(error: any) {\n    let errorMessage = '';\n    if (error.error instanceof ErrorEvent) {\n      // Get client-side error\n      errorMessage = error.error.message;\n    } else {\n      // Get server-side error\n      errorMessage = `Error Code: ${error.status}\\nMessage: ${error.message}`;\n    }\n    this.toastr.success(errorMessage);\n    return throwError(() => {\n      return errorMessage;\n    });\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}